{
  "name": "smartbirds-server",
  "version": "0.0.1",
  "description": "SmartBirds Server",
  "author": "Geno Roupsky",
  "private": true,
  "devDependencies": {
    "budo": "latest",
    "budo-less": "^1.0.1",
    "live-reload": "latest",
    "mocha": "latest",
    "parallelshell": "latest",
    "sequelize-fixtures": "latest",
    "should": "latest",
    "sqlite3": "latest",
    "watch": "^0.16.0",
    "watchify": "latest"
  },
  "scripts": {
    "help": "npm run ah -- help",
    "start": "npm run ah -- start",
    "ah": "PROJECT_ROOT=`pwd`/server actionhero",
    "sq": "sequelize",
    "mocha": "NODE_ENV=test PROJECT_ROOT=`pwd`/server mocha",
    "less": "lessc",
    "test": "npm run mocha --",
    "test:watch": "npm run mocha -- --reporter min --watch -G --full-trace",
    "dev": "parallelshell 'npm run build:watch' 'npm run ah start'",
    "build:js": "browserify ./client/scripts/app.js -d -o ./public/js/scripts.js",
    "build:js:watch": "watchify ./client/scripts/app.js -d -o ./public/js/scripts.js -v",
    "build:css": "lessc --clean-css --source-map --source-map-less-inline client/styles/main.less public/css/main.css",
    "build:css:watch": "watch 'npm run build:css' client/styles",
    "postinstall": "bower install",
    "prestart": "npm run migrate && npm run build:js",
    "migrate": "npm run sq -- db:migrate",
    "seed": "npm run sq -- db:seed",
    "budo": "budo ./client/scripts/app.js --serve js/scripts.js  -d public/ --live"
  },
  "dependencies": {
    "actionhero": "~12.1.2",
    "bcrypt": "~0.8.5",
    "bluebird": "~3.0.5",
    "bower": "~1.6.5",
    "browserify": "~12.0.1",
    "browserify-shim": "~3.8.0",
    "bulk-require": "~0.2.1",
    "bulkify": "~1.1.1",
    "csv-parse": "^1.0.0",
    "http-server": "~0.8.5",
    "less": "~2.5.3",
    "less-plugin-clean-css": "^1.5.1",
    "lodash": "~3.10.1",
    "pg": "~4.4.3",
    "pg-hstore": "~2.3.2",
    "sequelize": "~3.13.0",
    "sequelize-cli": "~2.1.0",
    "validator": "~4.2.1",
    "umzug": "^1.6.0"
  },
  "browser": {
    "angular": "./bower_components/angular/angular.js",
    "ui.bootstrap": "./bower_components/angular-bootstrap/ui-bootstrap-tpls.js",
    "uiGmapgoogle-maps": "./bower_components/angular-google-maps/dist/angular-google-maps.js",
    "ngSanitize": "./bower_components/angular-sanitize/angular-sanitize.js",
    "angular-simple-logger": "./bower_components/angular-simple-logger/dist/angular-simple-logger.js",
    "ui.router": "./bower_components/angular-ui-router/release/angular-ui-router.js",
    "ui.select": "./bower_components/ui-select/dist/select.js",
    "chance": "./bower_components/chance/chance.js",
    "lodash": "./bower_components/lodash/lodash.js",
    "angular-validation-match": "./bower_components/angular-validation-match/dist/angular-validation-match.min.js",
    "angular-resource": "./bower_components/angular-resource/angular-resource.js",
    "angular-cookies": "./bower_components/angular-cookies/angular-cookies.js"
  },
  "browserify-shim": {
    "angular": "angular",
    "ui.bootstrap": {
      "depends": [
        "angular:angular"
      ]
    },
    "uiGmapgoogle-maps": {
      "depends": [
        "angular:angular",
        "angular-simple-logger",
        "lodash:_"
      ]
    },
    "ngSanitize": {
      "depends": [
        "angular:angular"
      ]
    },
    "angular-simple-logger": {
      "depends": [
        "angular:angular"
      ]
    },
    "ui.router": {
      "depends": [
        "angular:angular"
      ]
    },
    "ui.select": {
      "depends": [
        "angular:angular"
      ]
    },
    "chance": "chance",
    "lodash": "_",
    "angular-validation-match": {
      "depends": [
        "angular:angular"
      ]
    },
    "angular-resource": {
      "depends": [
        "angular:angular"
      ]
    },
    "angular-cookies": {
      "depends": [
        "angular:angular"
      ]
    }
  },
  "browserify": {
    "transform": [
      "browserify-shim",
      "bulkify"
    ]
  }
}
